/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Task;

use Runtime.lib;
use Runtime.CoreStruct;
use Runtime.RuntimeUtils;
use Runtime.Task.CronTask;
use Runtime.Task.CronTimer;
use Runtime.Task.TaskList;
use Runtime.Task.TaskMethod;
use Runtime.Task.TaskOutputProvider;


struct CronMethodInfo extends CoreStruct
{
	static const string KIND_TIMER = "timer";
	static const string KIND_TASK = "task";
	string kind = "";
	string class_name = "";
	string method_name = "";
	int last_run = 0;
	int next_run = 0;
	int timer = "";
	string cron = "";
	bool can_run = false;
	
	
	string command() => this.class_name ~ "::" ~ this.method_name;
	
	
	/**
	 * Update next run
	 */
	pure CronMethodInfo updateNextRun(CronMethodInfo info)
	{
		int next_run = 0;
		if (info.kind == CronMethodInfo::KIND_TIMER)
		{
			next_run = info.last_run + info.timer;
			info <= can_run <= true;
			info <= next_run <= next_run;
		}
		return info;
	}
}
